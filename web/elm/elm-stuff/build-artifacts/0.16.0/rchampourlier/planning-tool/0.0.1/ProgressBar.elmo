Elm.ProgressBar = Elm.ProgressBar || {};
Elm.ProgressBar.make = function (_elm) {
   "use strict";
   _elm.ProgressBar = _elm.ProgressBar || {};
   if (_elm.ProgressBar.values) return _elm.ProgressBar.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var _op = {};
   var view = function (value) {
      var absoluteValue = A2($Basics.min,1,$Basics.abs(value));
      var widthPercentage = 100 * absoluteValue;
      var styleWidth = A2($Basics._op["++"],$Basics.toString(widthPercentage),"%");
      var color = _U.cmp(value,0) < 0 ? "red" : "green";
      var meterText = A2($Basics._op["++"],color,A2($Basics._op["++"],", ",styleWidth));
      return A2($Html.tr,
      _U.list([$Html$Attributes.$class("meter")]),
      _U.list([A2($Html.td,
      _U.list([$Html$Attributes.colspan(3)]),
      _U.list([A2($Html.span,
      _U.list([$Html$Attributes.$class("meter__level")
              ,$Html$Attributes.style(_U.list([{ctor: "_Tuple2",_0: "width",_1: styleWidth},{ctor: "_Tuple2",_0: "background-color",_1: color}]))]),
      _U.list([]))]))]));
   };
   return _elm.ProgressBar.values = {_op: _op,view: view};
};