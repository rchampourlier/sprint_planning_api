Elm.TeamMembers = Elm.TeamMembers || {};
Elm.TeamMembers.make = function (_elm) {
   "use strict";
   _elm.TeamMembers = _elm.TeamMembers || {};
   if (_elm.TeamMembers.values) return _elm.TeamMembers.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Set = Elm.Set.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $TeamMember = Elm.TeamMember.make(_elm);
   var _op = {};
   var toNames = function (teamMembers) {    return A2($List.map,function (tm) {    return tm.name;},teamMembers);};
   var fromNames = function (names) {    return A2($List.map,function (n) {    return A2($TeamMember.init,n,0);},$Set.toList(names));};
   return _elm.TeamMembers.values = {_op: _op,fromNames: fromNames,toNames: toNames};
};